name: LPython CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  test-ubuntu-latest-py310
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version:
          - "3.10"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: ci/environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Install Conda Packages
        shell: bash -l {0}
        run: conda install bison=3.4

      - name: Conda info
        shell: bash -l {0}
        run: |
            conda info
            conda list

      - name: Setup Platform (Linux)
        shell: bash -l {0}
        run: |
            echo "LFORTRAN_CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV
            echo "WIN=0" >> $GITHUB_ENV
            echo "MACOS=0" >> $GITHUB_ENV

      - name: Build
        shell: bash -l {0}
        run: |
            xonsh ci/build.xsh

      - name: Test
        shell: bash -l {0}
        run: |
            xonsh ci/test.xsh

  test-macos-latest-py310:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version:
          - "3.10"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          environment-file: ci/environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Install Conda Packages
        shell: bash -l {0}
        run: conda install bison=3.4

      - name: Conda info
        shell: bash -l {0}
        run: |
            conda info
            conda list

      - name: Setup Platform
        shell: bash -l {0}
        run: |
            echo "LFORTRAN_CMAKE_GENERATOR=Unix Makefiles" >> $GITHUB_ENV
            echo "WIN=0" >> $GITHUB_ENV
            echo "MACOS=1" >> $GITHUB_ENV

      - name: Build
        shell: bash -l {0}
        run: |
            xonsh ci/build.xsh

      - name: Test
        shell: bash -l {0}
        run: |
            xonsh ci/test.xsh

  test-windows-2019-py310:
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os: ["windows-2019"]
          python-version:
            - "3.10"

      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - uses: conda-incubator/setup-miniconda@v2
          with:
            auto-update-conda: true
            environment-file: ci/environment.yml
            python-version: ${{ matrix.python-version }}
            auto-activate-base: false

        - name: Install Conda Packages
          shell: bash -l {0}
          run: conda install m2-bison=3.0.4 ninja

        - name: Conda info
          shell: bash -l {0}
          run: |
              conda info
              conda list

        - name: Build
          shell: cmd
          run: |
              set CONDA_INSTALL_LOCN=C:\\Miniconda
              call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
              call conda activate test
              set LFORTRAN_CMAKE_GENERATOR=Ninja
              set WIN=1
              set MACOS=0
              call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
              xonsh ci\build.xsh

        - name: Test
          shell: cmd
          run: |
              set CONDA_INSTALL_LOCN=C:\\Miniconda
              call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
              call conda activate test
              set LFORTRAN_CMAKE_GENERATOR=Ninja
              set WIN=1
              set MACOS=0
              call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
              xonsh ci\test.xsh
